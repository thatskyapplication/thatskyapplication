name: Deploy website
on:
  push:
    branches:
      - main
    paths:
      - apps/website/**/*
  workflow_dispatch:
concurrency:
  group: deploy-website
  cancel-in-progress: true
permissions:
  contents: read
jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/website/Dockerfile
          tags: thatskyapplication-website:latest
          load: true
          platforms: linux/amd64
          cache-from: type=gha,scope=deploy-thatskyapplication-website
          cache-to: type=gha,mode=max,scope=deploy-thatskyapplication-website
        env:
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false

      - name: Install Uncloud CLI
        run: |
          curl -fsS https://get.uncloud.run/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_SERVER }}

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Push image to server
        run: uc image push thatskyapplication-website:latest --connect ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}

      - name: Deploy to Uncloud
        env:
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          DATABASE_URL_CAELUS: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:5432/${{ secrets.POSTGRES_DB_CAELUS }}
          DISCORD_TOKEN_CAELUS: ${{ secrets.DISCORD_TOKEN }}
          APPLICATION_ID: ${{ vars.DISCORD_APPLICATION_ID }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          SUPPORT_SERVER_GUILD_ID: ${{ vars.SUPPORT_SERVER_GUILD_ID }}
          TRANSLATOR_ROLE_ID: ${{ vars.TRANSLATOR_ROLE_ID }}
          CROWDIN_CLIENT_ID: ${{ secrets.CROWDIN_CLIENT_ID }}
          CROWDIN_CLIENT_SECRET: ${{ secrets.CROWDIN_CLIENT_SECRET }}
          REDIRECT_URI_LOGIN: ${{ vars.REDIRECT_URI_LOGIN }}
          REDIRECT_URI_DISCORD_CROWDIN: ${{ vars.REDIRECT_URI_DISCORD_CROWDIN }}
          SENTRY_DATA_SOURCE_NAME_WEBSITE: ${{ secrets.SENTRY_DATA_SOURCE_NAME_WEBSITE }}
        run: uc deploy --connect ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} --profile thatskyapplication-website --recreate --yes
