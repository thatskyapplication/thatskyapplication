name: Backup database
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
jobs:
  backup:
    name: Backup database
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLY_DB_APP: thatskyapplication-database
      PGUSER: postgres
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      PGDATABASE: caelus
      PGHOST: localhost
      S3_BUCKET: thatskyapplication-backups
    steps:
      - uses: s3-actions/s3cmd@v1.8.0
        with:
          provider: cloudflare
          secret_key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          access_key: ${{ secrets.S3_ACCESS_KEY_ID }}
          account_id: ${{ secrets.S3_ACCOUNT_ID }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Set filename
        id: set-filename
        run: echo "FILENAME=$(date -u +"%s").sql" >> "$GITHUB_OUTPUT"
      - name: Install pg_dump 15.2
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          sudo apt-get update
          sudo apt-get install -y postgresql-client-15
          psql --version
      - name: Dump database, gzip, and upload to R2
        run: |
          flyctl proxy 5432 --app $FLY_DB_APP &
          sleep 3
          echo Dumping...
          pg_dump --format=custom --verbose -h $PGHOST -U $PGUSER $PGDATABASE > ${{ steps.set-filename.outputs.FILENAME }}
          gzip ${{ steps.set-filename.outputs.FILENAME }}
          ls
          s3cmd put --acl-private ${{ steps.set-filename.outputs.FILENAME }}.gz s3://$S3_BUCKET/${{ steps.set-filename.outputs.FILENAME }}.gz
