import {
	type ApplicationCommandData,
	type MessageContextMenuCommandInteraction,
	ApplicationCommandType,
} from "discord.js";
import { skyStory } from "../../OpenAIApi.js";
import type { MessageContextMenuCommand } from "../index.js";

export default class implements MessageContextMenuCommand {
	public readonly name = "Sky Story";

	public readonly type = ApplicationCommandType.Message;

	public async messageContextMenu(interaction: MessageContextMenuCommandInteraction) {
		const { targetMessage } = interaction;

		if (targetMessage.author.bot) {
			await interaction.reply({
				content: "A story cannot be generated by messages authored from non-users.",
				ephemeral: true,
			});

			return;
		}

		if (targetMessage.content.length === 0) {
			await interaction.reply({
				content: "There seems to be no context in this message to generate a story from.",
				ephemeral: true,
			});

			return;
		}

		await skyStory(interaction);
	}

	public get commandData(): ApplicationCommandData {
		return {
			name: this.name,
			type: this.type,
		};
	}
}
